Scalability without Architecture

Callbacks form the basis for high performance actors; Functional Programming techniques are employed for improved readability. With actor performance increased by a hundred fold, now everything can be an actor.

The actors are composable. Factories are used for decoupling and to implement dependency-driven compositon. Dependency Injection is made open-ended by using a composite actor.

This then is our starting point. From here we proceed to transaction processing, Incremental (Lazy) Deserialization, and databases.
